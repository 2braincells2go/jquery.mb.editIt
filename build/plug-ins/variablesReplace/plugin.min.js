! function( a, b ) {
	var c = {
		name: "variablesReplace",
		description: "Replace variables with the corresponding cliententry. ",
		version: "1.0",
		author: "Pupunzi",
		command: {
			label: _( "Insert Variable" ),
			icon: "editIt-icon-crosshairs",
			type: "plugin",
			action: function( d ) {
				a.get( c.path + "prompt.html?_=" + ( new Date ).getTime(), function( e ) {
					a.editIt.prompt.draw( d, e, c, function( a ) {
						b.execCommand( "insertText", !1, "%%" + a[ "variable-name" ] + "%%" )
					}, null, null, !0 )
				} )
			}
		},
		activate: function() {
			console.debug( "Activate:: ", this );
			var b = this;
			a.editIt.setVariables = b.setVariables, a.editIt.getVariables = b.getVariables
		},
		update: function( c ) {
			var d = this,
				e = c.editor;
			a( b ).on( "editIt-preview." + d.name, function( a ) {
				var b = d.replace( a.content.html(), d.variables );
				a.content.html( b )
			} ), a.editIt.commands.extend( "variablesReplace", d.command );
			var f = e.editorsContainer.opt.toolBar;
			a.editIt.toolBar.extend( f, "|", 1e3 ), a.editIt.toolBar.extend( f, "variablesReplace", 1e3 )
		},
		destroy: function( a ) {},
		getVariables: function() {
			return c.variables
		},
		setVariables: function( b ) {
			a.extend( c.variables, b );
			for( var d in b ) {
				a( "[name=" + d + "]" ).length && a( "[name=" + d + "]" ).remove();
				var e = a( "<input/>" ).attr( {
					type: "hidden",
					value: b[ d ],
					name: d,
					"data-content-replace": !0
				} );
				a( "body" ).append( e )
			}
		},
		replace: function( b, c ) {
			var d = function( b ) {
				b = b.replace( /%%/g, "" );
				var d = a( "[name=" + b + "]" ),
					e = d.length ? d.val() : c[ b ];
				return e
			};
			return b.replace( /%%([^>%%]+)%%/g, d )
		},
		variables: {}
	};
	a.editIt.plugins.register( c )
}( jQuery, document );
//# sourceMappingURL=plugin.min.js.map
