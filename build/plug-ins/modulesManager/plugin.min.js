! function( a, b ) {
	var c = {
		name: "modulesManager",
		description: "Add the capability to place snippets of code into the editor context",
		version: "1.0",
		author: "Pupunzi",
		activate: function() {
			var b = this;
			console.debug( "Activate:: ", b ), a.getJSON( b.path + "modules/modules.json?_=" + ( new Date ).getTime(), function( a ) {
				b.templates = a.templates
			} )
		},
		update: function( b ) {
			a( ".modulesManager-buttonBar" ).remove();
			var c = this;
			a( "[data-group]" ).each( function() {
				var b = this,
					d = ( a( b ).is( "[data-editable]" ) ? b : a( b ).children( "[data-editable]" ).eq( 0 ), a( "<div/>" ).addClass( "modulesManager-buttonBar" ).css( {
						opacity: 0
					} ) ),
					e = a.editIt.util.drawButton( "Add block", "apply", "editIt-icon-plus", null, null, !0 ),
					f = a.editIt.util.drawButton( "Remove block", "red", "editIt-icon-minus", null, null, !0 );
				e.on( "click", function() {
					a.get( c.path + "prompt.html?_=" + ( new Date ).getTime(), function( d ) {
						var e = a( b ).parents( ".editIt-wrapper" ).eq( 0 );
						a.editIt.prompt.draw( e, d, c, function( a ) {
							c.insert.apply( c, [ a[ "template-url" ], b, a.position, null ] )
						} )
					} )
				} ), f.on( "click", function() {
					var d = a( b ).parents( ".editIt-wrapper" ).eq( 0 );
					a.editIt.prompt.draw( d, "<h2>" + _( "Do you really want to delete this content?" ) + "</h2>", c, function() {
						a( b ).remove(), a.editIt.util.setUneditable( d ), d.editIt()
					}, "Delete", "delete" )
				} ), d.append( e ), a( b ).data( "removable" ) && d.append( f ), a( b ).append( d ), d.on( "mouseenter", function() {
					d.fadeTo( 100, 1 )
				} ).on( "mouseleave", function() {
					d.fadeTo( 100, 0 )
				} )
			} )
		},
		destroy: function() {
			a( ".modulesManager-buttonBar" ).remove()
		},
		insert: function( b, c, d ) {
			var e = this,
				f = a( c ).parents( ".editIt-wrapper" ).eq( 0 );
			a.get( e.path + "modules/" + b + "?_=" + ( new Date ).getTime() ).done( function( b ) {
				a( c )[ d ]( b ), a.editIt.util.setUneditable( f );
				var e = f.opt;
				f.editIt( e )
			} ).fail( function( c ) {
				a.editIt.alert.draw( f, _( "There's been an error loading the template:<br> %%", [ b ] ) )
			} )
		}
	};
	a.editIt.plugins.register( c )
}( jQuery, document );
//# sourceMappingURL=plugin.min.js.map
